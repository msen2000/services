//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.5-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.10.25 at 02:23:02 PM PDT 
//


package org.delta.b2b.edi.t837;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * To identify a composite unit of measure (See Figures Appendix for examples of use) 
 * 
 * <p>Java class for C-C001-Composite_Unit_of_Measure complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="C-C001-Composite_Unit_of_Measure">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="E-K301-Unit_or_Basis_for_Measurement_Code" type="{http://www.delta.org/b2b/edi/t837}E-K301-Unit_or_Basis_for_Measurement_Code"/>
 *         &lt;element name="E-K302-Exponent" type="{http://www.delta.org/b2b/edi/t837}E-K302-Exponent"/>
 *         &lt;element name="E-K303-Multiplier" type="{http://www.delta.org/b2b/edi/t837}E-K303-Multiplier"/>
 *         &lt;element name="E-K304-Unit_or_Basis_for_Measurement_Code" type="{http://www.delta.org/b2b/edi/t837}E-K304-Unit_or_Basis_for_Measurement_Code"/>
 *         &lt;element name="E-K305-Exponent" type="{http://www.delta.org/b2b/edi/t837}E-K305-Exponent"/>
 *         &lt;element name="E-K306-Multiplier" type="{http://www.delta.org/b2b/edi/t837}E-K306-Multiplier"/>
 *         &lt;element name="E-K307-Unit_or_Basis_for_Measurement_Code" type="{http://www.delta.org/b2b/edi/t837}E-K307-Unit_or_Basis_for_Measurement_Code"/>
 *         &lt;element name="E-K308-Exponent" type="{http://www.delta.org/b2b/edi/t837}E-K308-Exponent"/>
 *         &lt;element name="E-K309-Multiplier" type="{http://www.delta.org/b2b/edi/t837}E-K309-Multiplier"/>
 *         &lt;element name="E-K310-Unit_or_Basis_for_Measurement_Code" type="{http://www.delta.org/b2b/edi/t837}E-K310-Unit_or_Basis_for_Measurement_Code"/>
 *         &lt;element name="E-K311-Exponent" type="{http://www.delta.org/b2b/edi/t837}E-K311-Exponent"/>
 *         &lt;element name="E-K312-Multiplier" type="{http://www.delta.org/b2b/edi/t837}E-K312-Multiplier"/>
 *         &lt;element name="E-K313-Unit_or_Basis_for_Measurement_Code" type="{http://www.delta.org/b2b/edi/t837}E-K313-Unit_or_Basis_for_Measurement_Code"/>
 *         &lt;element name="E-K314-Exponent" type="{http://www.delta.org/b2b/edi/t837}E-K314-Exponent"/>
 *         &lt;element name="E-K315-Multiplier" type="{http://www.delta.org/b2b/edi/t837}E-K315-Multiplier"/>
 *       &lt;/sequence>
 *       &lt;attribute name="ID" type="{http://www.w3.org/2001/XMLSchema}string" default="C001" />
 *       &lt;attribute name="Name" type="{http://www.w3.org/2001/XMLSchema}string" default="Composite Unit of Measure" />
 *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}string" default="Composite" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "C-C001-Composite_Unit_of_Measure", propOrder = {
    "ek301UnitOrBasisForMeasurementCode",
    "ek302Exponent",
    "ek303Multiplier",
    "ek304UnitOrBasisForMeasurementCode",
    "ek305Exponent",
    "ek306Multiplier",
    "ek307UnitOrBasisForMeasurementCode",
    "ek308Exponent",
    "ek309Multiplier",
    "ek310UnitOrBasisForMeasurementCode",
    "ek311Exponent",
    "ek312Multiplier",
    "ek313UnitOrBasisForMeasurementCode",
    "ek314Exponent",
    "ek315Multiplier"
})
public class CC001CompositeUnitOfMeasure {

    @XmlElement(name = "E-K301-Unit_or_Basis_for_Measurement_Code", required = true)
    protected EK301UnitOrBasisForMeasurementCode ek301UnitOrBasisForMeasurementCode;
    @XmlElement(name = "E-K302-Exponent", required = true)
    protected EK302Exponent ek302Exponent;
    @XmlElement(name = "E-K303-Multiplier", required = true)
    protected EK303Multiplier ek303Multiplier;
    @XmlElement(name = "E-K304-Unit_or_Basis_for_Measurement_Code", required = true)
    protected EK304UnitOrBasisForMeasurementCode ek304UnitOrBasisForMeasurementCode;
    @XmlElement(name = "E-K305-Exponent", required = true)
    protected EK305Exponent ek305Exponent;
    @XmlElement(name = "E-K306-Multiplier", required = true)
    protected EK306Multiplier ek306Multiplier;
    @XmlElement(name = "E-K307-Unit_or_Basis_for_Measurement_Code", required = true)
    protected EK307UnitOrBasisForMeasurementCode ek307UnitOrBasisForMeasurementCode;
    @XmlElement(name = "E-K308-Exponent", required = true)
    protected EK308Exponent ek308Exponent;
    @XmlElement(name = "E-K309-Multiplier", required = true)
    protected EK309Multiplier ek309Multiplier;
    @XmlElement(name = "E-K310-Unit_or_Basis_for_Measurement_Code", required = true)
    protected EK310UnitOrBasisForMeasurementCode ek310UnitOrBasisForMeasurementCode;
    @XmlElement(name = "E-K311-Exponent", required = true)
    protected EK311Exponent ek311Exponent;
    @XmlElement(name = "E-K312-Multiplier", required = true)
    protected EK312Multiplier ek312Multiplier;
    @XmlElement(name = "E-K313-Unit_or_Basis_for_Measurement_Code", required = true)
    protected EK313UnitOrBasisForMeasurementCode ek313UnitOrBasisForMeasurementCode;
    @XmlElement(name = "E-K314-Exponent", required = true)
    protected EK314Exponent ek314Exponent;
    @XmlElement(name = "E-K315-Multiplier", required = true)
    protected EK315Multiplier ek315Multiplier;
    @XmlAttribute(name = "ID")
    protected String id;
    @XmlAttribute(name = "Name")
    protected String name;
    @XmlAttribute(name = "Type")
    protected String type;

    /**
     * Gets the value of the ek301UnitOrBasisForMeasurementCode property.
     * 
     * @return
     *     possible object is
     *     {@link EK301UnitOrBasisForMeasurementCode }
     *     
     */
    public EK301UnitOrBasisForMeasurementCode getEK301UnitOrBasisForMeasurementCode() {
        return ek301UnitOrBasisForMeasurementCode;
    }

    /**
     * Sets the value of the ek301UnitOrBasisForMeasurementCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link EK301UnitOrBasisForMeasurementCode }
     *     
     */
    public void setEK301UnitOrBasisForMeasurementCode(EK301UnitOrBasisForMeasurementCode value) {
        this.ek301UnitOrBasisForMeasurementCode = value;
    }

    /**
     * Gets the value of the ek302Exponent property.
     * 
     * @return
     *     possible object is
     *     {@link EK302Exponent }
     *     
     */
    public EK302Exponent getEK302Exponent() {
        return ek302Exponent;
    }

    /**
     * Sets the value of the ek302Exponent property.
     * 
     * @param value
     *     allowed object is
     *     {@link EK302Exponent }
     *     
     */
    public void setEK302Exponent(EK302Exponent value) {
        this.ek302Exponent = value;
    }

    /**
     * Gets the value of the ek303Multiplier property.
     * 
     * @return
     *     possible object is
     *     {@link EK303Multiplier }
     *     
     */
    public EK303Multiplier getEK303Multiplier() {
        return ek303Multiplier;
    }

    /**
     * Sets the value of the ek303Multiplier property.
     * 
     * @param value
     *     allowed object is
     *     {@link EK303Multiplier }
     *     
     */
    public void setEK303Multiplier(EK303Multiplier value) {
        this.ek303Multiplier = value;
    }

    /**
     * Gets the value of the ek304UnitOrBasisForMeasurementCode property.
     * 
     * @return
     *     possible object is
     *     {@link EK304UnitOrBasisForMeasurementCode }
     *     
     */
    public EK304UnitOrBasisForMeasurementCode getEK304UnitOrBasisForMeasurementCode() {
        return ek304UnitOrBasisForMeasurementCode;
    }

    /**
     * Sets the value of the ek304UnitOrBasisForMeasurementCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link EK304UnitOrBasisForMeasurementCode }
     *     
     */
    public void setEK304UnitOrBasisForMeasurementCode(EK304UnitOrBasisForMeasurementCode value) {
        this.ek304UnitOrBasisForMeasurementCode = value;
    }

    /**
     * Gets the value of the ek305Exponent property.
     * 
     * @return
     *     possible object is
     *     {@link EK305Exponent }
     *     
     */
    public EK305Exponent getEK305Exponent() {
        return ek305Exponent;
    }

    /**
     * Sets the value of the ek305Exponent property.
     * 
     * @param value
     *     allowed object is
     *     {@link EK305Exponent }
     *     
     */
    public void setEK305Exponent(EK305Exponent value) {
        this.ek305Exponent = value;
    }

    /**
     * Gets the value of the ek306Multiplier property.
     * 
     * @return
     *     possible object is
     *     {@link EK306Multiplier }
     *     
     */
    public EK306Multiplier getEK306Multiplier() {
        return ek306Multiplier;
    }

    /**
     * Sets the value of the ek306Multiplier property.
     * 
     * @param value
     *     allowed object is
     *     {@link EK306Multiplier }
     *     
     */
    public void setEK306Multiplier(EK306Multiplier value) {
        this.ek306Multiplier = value;
    }

    /**
     * Gets the value of the ek307UnitOrBasisForMeasurementCode property.
     * 
     * @return
     *     possible object is
     *     {@link EK307UnitOrBasisForMeasurementCode }
     *     
     */
    public EK307UnitOrBasisForMeasurementCode getEK307UnitOrBasisForMeasurementCode() {
        return ek307UnitOrBasisForMeasurementCode;
    }

    /**
     * Sets the value of the ek307UnitOrBasisForMeasurementCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link EK307UnitOrBasisForMeasurementCode }
     *     
     */
    public void setEK307UnitOrBasisForMeasurementCode(EK307UnitOrBasisForMeasurementCode value) {
        this.ek307UnitOrBasisForMeasurementCode = value;
    }

    /**
     * Gets the value of the ek308Exponent property.
     * 
     * @return
     *     possible object is
     *     {@link EK308Exponent }
     *     
     */
    public EK308Exponent getEK308Exponent() {
        return ek308Exponent;
    }

    /**
     * Sets the value of the ek308Exponent property.
     * 
     * @param value
     *     allowed object is
     *     {@link EK308Exponent }
     *     
     */
    public void setEK308Exponent(EK308Exponent value) {
        this.ek308Exponent = value;
    }

    /**
     * Gets the value of the ek309Multiplier property.
     * 
     * @return
     *     possible object is
     *     {@link EK309Multiplier }
     *     
     */
    public EK309Multiplier getEK309Multiplier() {
        return ek309Multiplier;
    }

    /**
     * Sets the value of the ek309Multiplier property.
     * 
     * @param value
     *     allowed object is
     *     {@link EK309Multiplier }
     *     
     */
    public void setEK309Multiplier(EK309Multiplier value) {
        this.ek309Multiplier = value;
    }

    /**
     * Gets the value of the ek310UnitOrBasisForMeasurementCode property.
     * 
     * @return
     *     possible object is
     *     {@link EK310UnitOrBasisForMeasurementCode }
     *     
     */
    public EK310UnitOrBasisForMeasurementCode getEK310UnitOrBasisForMeasurementCode() {
        return ek310UnitOrBasisForMeasurementCode;
    }

    /**
     * Sets the value of the ek310UnitOrBasisForMeasurementCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link EK310UnitOrBasisForMeasurementCode }
     *     
     */
    public void setEK310UnitOrBasisForMeasurementCode(EK310UnitOrBasisForMeasurementCode value) {
        this.ek310UnitOrBasisForMeasurementCode = value;
    }

    /**
     * Gets the value of the ek311Exponent property.
     * 
     * @return
     *     possible object is
     *     {@link EK311Exponent }
     *     
     */
    public EK311Exponent getEK311Exponent() {
        return ek311Exponent;
    }

    /**
     * Sets the value of the ek311Exponent property.
     * 
     * @param value
     *     allowed object is
     *     {@link EK311Exponent }
     *     
     */
    public void setEK311Exponent(EK311Exponent value) {
        this.ek311Exponent = value;
    }

    /**
     * Gets the value of the ek312Multiplier property.
     * 
     * @return
     *     possible object is
     *     {@link EK312Multiplier }
     *     
     */
    public EK312Multiplier getEK312Multiplier() {
        return ek312Multiplier;
    }

    /**
     * Sets the value of the ek312Multiplier property.
     * 
     * @param value
     *     allowed object is
     *     {@link EK312Multiplier }
     *     
     */
    public void setEK312Multiplier(EK312Multiplier value) {
        this.ek312Multiplier = value;
    }

    /**
     * Gets the value of the ek313UnitOrBasisForMeasurementCode property.
     * 
     * @return
     *     possible object is
     *     {@link EK313UnitOrBasisForMeasurementCode }
     *     
     */
    public EK313UnitOrBasisForMeasurementCode getEK313UnitOrBasisForMeasurementCode() {
        return ek313UnitOrBasisForMeasurementCode;
    }

    /**
     * Sets the value of the ek313UnitOrBasisForMeasurementCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link EK313UnitOrBasisForMeasurementCode }
     *     
     */
    public void setEK313UnitOrBasisForMeasurementCode(EK313UnitOrBasisForMeasurementCode value) {
        this.ek313UnitOrBasisForMeasurementCode = value;
    }

    /**
     * Gets the value of the ek314Exponent property.
     * 
     * @return
     *     possible object is
     *     {@link EK314Exponent }
     *     
     */
    public EK314Exponent getEK314Exponent() {
        return ek314Exponent;
    }

    /**
     * Sets the value of the ek314Exponent property.
     * 
     * @param value
     *     allowed object is
     *     {@link EK314Exponent }
     *     
     */
    public void setEK314Exponent(EK314Exponent value) {
        this.ek314Exponent = value;
    }

    /**
     * Gets the value of the ek315Multiplier property.
     * 
     * @return
     *     possible object is
     *     {@link EK315Multiplier }
     *     
     */
    public EK315Multiplier getEK315Multiplier() {
        return ek315Multiplier;
    }

    /**
     * Sets the value of the ek315Multiplier property.
     * 
     * @param value
     *     allowed object is
     *     {@link EK315Multiplier }
     *     
     */
    public void setEK315Multiplier(EK315Multiplier value) {
        this.ek315Multiplier = value;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getID() {
        if (id == null) {
            return "C001";
        } else {
            return id;
        }
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setID(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        if (name == null) {
            return "Composite Unit of Measure";
        } else {
            return name;
        }
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getType() {
        if (type == null) {
            return "Composite";
        } else {
            return type;
        }
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setType(String value) {
        this.type = value;
    }

}
